"""
This security layer implements A/B storage for files in RepyV2 to ensure data integrity.
"""
TYPE = "type"
ARGS = "args"
RETURN = "return"
EXCP = "exceptions"
TARGET = "target"
FUNC = "func"
OBJC = "objc"

class ABFile:
    def __init__(self, filename, create):
        self.Afn = filename + '.a'
        self.Bfn = filename + '.b'

        # 处理文件创建/打开逻辑
        if create:
            # 创建新文件时初始化A文件
            self.Afile = openfile(self.Afn, True)
            self.Afile.writeat('SE', 0)
            # 创建空B文件
            self.Bfile = openfile(self.Bfn, True)
        else:
            # 打开现有A文件
            try:
                self.Afile = openfile(self.Afn, False)
                existing_data = self.Afile.readat(None, 0)
            except:
                # 处理A文件不存在的情况
                raise Exception("Backup file not found")

            # 初始化B文件为A文件内容
            self.Bfile = openfile(self.Bfn, True)
            self.Bfile.writeat(existing_data, 0)

    def writeat(self, data, offset):
        # 所有写入操作针对B文件
        self.Bfile.writeat(data, offset)

    def readat(self, bytes, offset):
        # 所有读取操作来自A文件
        return self.Afile.readat(bytes, offset)

    def close(self):
        # 读取B文件内容进行验证
        try:
            b_data = self.Bfile.readat(None, 0)
        except:
            b_data = ''

        # 验证条件：长度≥2且首字母S尾字母E
        is_valid = len(b_data) >= 2 and b_data[0] == 'S' and b_data[-1] == 'E'

        # 关闭文件句柄
        self.Afile.close()
        self.Bfile.close()

        # 如果验证通过则更新A文件
        if is_valid:
            try:
                # 删除旧A文件
                if self.Afn in listfiles():
                    removefile(self.Afn)
                # 创建新A文件并写入数据
                new_afile = openfile(self.Afn, True)
                new_afile.writeat(b_data, 0)
                new_afile.close()
            except:
                # 静默处理所有异常
                pass

def ABopenfile(filename, create):
    return ABFile(filename, create)

# 类型系统配置
sec_file_def = {
    "obj-type": ABFile,
    "name": "ABFile",
    "writeat": {
        "type": "func",
        "args": (str, int),
        "exceptions": Exception,
        "return": (int, type(None)),
        "target": ABFile.writeat
    },
    "readat": {
        "type": "func",
        "args": ((int, type(None)), int),
        "exceptions": Exception,
        "return": str,
        "target": ABFile.readat
    },
    "close": {
        "type": "func",
        "args": None,
        "exceptions": None,
        "return": (bool, type(None)),
        "target": ABFile.close
    }
}

CHILD_CONTEXT_DEF["ABopenfile"] = {
    TYPE: OBJC,
    ARGS: (str, bool),
    EXCP: Exception,
    RETURN: sec_file_def,
    TARGET: ABopenfile
}

# 执行用户代码
secure_dispatch_module()